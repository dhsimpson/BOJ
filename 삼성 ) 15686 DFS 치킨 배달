#include<iostream>
#include<vector>
using namespace std;
#define MAX 50
int map[MAX][MAX];
int check[13] = { 0 }; // 치킨집 체크. chicken 벡터
int N, M;
int res = 987654321;
vector<pair<int, int>> chicken, home;
void minChick() {
	int result = 0;
	for (int i = 0; i < home.size(); i++) {
		int tempMin = 987654321;
		for (int j = 0; j < chicken.size(); j++) {
			if (check[j] == 1) {
				tempMin = min(tempMin, abs(home[i].first - chicken[j].first) + abs(home[i].second - chicken[j].second));
			}
		}
		result += tempMin;
	}
	res = min(res, result);
	return;
}
void fail(int depth,int num) { // 재귀적으로 탐색한다.
	if (depth == 0) { 
		minChick();
		return;
	}
	for (int i = num; i < chicken.size(); i++) {
		if (check[i] == 0) {
			check[i] = 1;
			fail(depth - 1, i + 1);
			check[i] = 0;
		}
	}
}
int main() {
	cin >> N >> M;
	int temp;
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < N; j++) {
			cin >> temp;
			map[i][j] = temp;
			if (temp == 1) home.push_back({ i,j });
			else if (temp == 2) chicken.push_back({ i,j });
		}
	}
	for (int i = 1; i <= M; i++) fail(i,0); // 치킨집 개수는 1부터 M 까지 이며, 파라미터로써 depth의미로 넣는다.
	cout << res;
	return 0;
}
