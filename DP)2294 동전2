#include<iostream>
#include<vector>
#include<algorithm>
#define INF 987654321
using namespace std;
vector<int> cost;
int N, K, t, cnt, res;
bool coins[10001];
int DP[10001];
int main() {
	scanf("%d%d", &N, &K);
	fill(DP, DP + 10001, INF);
	DP[0] = 0;
	for (int i = 1; i <= N; i++) {
		scanf("%d", &t);
		if (t <= 10000)coins[t] = true;
	}
	for (int i = 1; i <= 10000; i++) {
		if (coins[i]) cost.push_back(i);
	}
	for (int i = 0; i <= K; i++) {
		for (int j = 0; j < cost.size(); j++) {
			if (i + cost[j] > 10000) { break; }
			if (DP[i + cost[j]] > DP[i] + 1) {
				DP[i + cost[j]] = DP[i] + 1;
			}
		}
	}
	if (DP[K] == INF)printf("-1");
	else printf("%d", DP[K]);
	return 0;
}
