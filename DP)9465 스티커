#include<iostream>
#define MAX 1000000
int TC, n, t;
int DP[2][MAX];
int temp[2][MAX];
int main(){
	scanf("%d", &TC);
	for (int tc = 1; tc <= TC; tc++) {
		scanf("%d", &n);
		for (int i = 0; i < 2; i++) { 
			for (int j = 0; j < n; j++) { 
				scanf("%d", &temp[i][j]);
				DP[i][j] = 0;
			} 
		}
		DP[0][0] = temp[0][0]; DP[1][0] = temp[1][0];
		if (n > 1) { DP[0][1] = DP[1][0] + temp[0][1]; DP[1][1] = DP[0][0] + temp[1][1]; }
		for (int j = 2; j < n; j++) {
			//DP[1][j-2] DP[1][j-1] DP[0][j-2]  중에 가장 큰 값을 선택
			//DP[0][j-2] DP[0][j-1] DP[1][j-2]  중에 가장 큰 값을 선택
			t = DP[1][j - 2];
			if (t < DP[1][j - 1]) { t = DP[1][j - 1]; }
			if (t < DP[0][j - 2]){t = DP[0][j - 2];}
			DP[0][j] = temp[0][j] + t;
			t = DP[0][j - 2];
			if (t < DP[0][j - 1]) { t = DP[0][j - 1]; }
			if (t < DP[1][j - 2]) { t = DP[1][j - 2]; }
			DP[1][j] = temp[1][j] + t;
		}
		if (DP[0][n - 1] < DP[1][n - 1])printf("%d\n", DP[1][n - 1]);
		else printf("%d\n", DP[0][n - 1]);
	}
	return 0;
}
