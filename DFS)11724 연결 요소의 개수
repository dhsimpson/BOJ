#include<iostream>
#include<string>
#include<vector>
#include<algorithm>
#include<queue>
#include<limits>
using namespace std;

void DFS(vector<int>* graph,bool* check,int s) {
	check[s] = true;
	for (int t = 0; t < graph[s].size(); t++) {
		if (!check[graph[s][t]]) DFS(graph, check, graph[s][t]);
	}
}
int main() {
	int N, M;
	cin >> N >> M;
	vector<int>* graph = new vector<int>[N];
	bool* check = new bool [N];
	for (int i = 0; i < N; i++) {
		check[i] = false;
	}
	int a, b;
	for (int i = 0; i < M; i++) {
		cin >> a >> b;
		graph[a - 1].push_back(b - 1); // 정점 x를 x-1로
		graph[b - 1].push_back(a - 1);
	}
	int cnt = 0;
	for (int i = 0; i < N; i++) {
		if (!check[i]) {
			cnt++;
			DFS(graph, check, i);
		}
	}
	cout << cnt;


	return 0;
}
