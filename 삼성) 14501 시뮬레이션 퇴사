#include<iostream>
#include<string>
#include<vector>
#include<queue>
#include<limits>
using namespace std;
#define MAX 15
int N;
int work[MAX + 1][2] = { 0 };
int maxSum = 0;
void counsel(int depth,int semiSum) { // depth == 날짜
	// 해당 날짜에 시작하는 상담을 수행할 때
	if(depth+work[depth][0]<=N) counsel(depth + work[depth][0], semiSum + work[depth][1]);
	else if (depth + work[depth][0] - 1 == N) {
		if (maxSum < semiSum + work[depth][1]) maxSum = semiSum + work[depth][1];
	}
	else {
		if (maxSum < semiSum) maxSum = semiSum;
	}
	// 해당 날짜에 시작하는 상담을 수행하지 않을 때
	if(depth+1<=N) counsel(depth + 1, semiSum);
	else {
		if (maxSum < semiSum) maxSum = semiSum;
	}
}
int main() {
	cin >> N;
	for (int i = 1; i < N + 1; i++) {
		cin >> work[i][0] >> work[i][1];
	}
	counsel(1,0);
	cout << maxSum;
	return 0;
}
